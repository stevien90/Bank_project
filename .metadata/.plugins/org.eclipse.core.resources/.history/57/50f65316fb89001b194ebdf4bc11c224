package com.OkaneBanku.app.main;

import java.util.Scanner;

import org.apache.log4j.Logger;

public class CustomerMain {
	private static Logger usermessage = Logger.getLogger(CustomerMain.class);

	public static void main(String[] args) {
		usermessage.info("=====================================");
		usermessage.info("|| Welcome to Okane Banku App V1.0 ||");
		usermessage.info("=====================================");
		usermessage.info("");

		int choice = 0;

		Scanner sc = new Scanner(System.in);
		do {
			usermessage.info("Main Menu");
			usermessage.info("_________________");
			usermessage.info("1) Log in");
			usermessage.info("2) Create New Account");
			usermessage.info("3) Exit Application");

			try {
				choice = Integer.parseInt(sc.nextLine());
				switch (choice) {
				case 1:
					String username;
					String password;
					usermessage.info("Enter username: ");
					username = sc.nextLine();
					usermessage.info("Enter password: ");
					password = sc.nextLine();
					if (username == username && password == password) {
						int loginchoice = 0;
						do {
							usermessage.info("Customer Menu");
							usermessage.info("==============");
							usermessage.info("1) Check account balance");
							usermessage.info("2) Deposit to account balance");
							usermessage.info("3) Withdraw from account balance");
							usermessage.info("4) Perform transfer");
							usermessage.info("5) Check pending transfer");
							usermessage.info("6) Exit");
							try {
								loginchoice = Integer.parseInt(sc.nextLine());
								switch (loginchoice) {
								case 1:
									usermessage.info("1) Checkings");
									usermessage.info("2) Savings");
									try {
										int accountchoice = 0;
										accountchoice = Integer.parseInt(sc.nextLine());
										if(accountchoice == 1){
											usermessage.info("under construction");
										}
										if(accountchoice == 2) {
											usermessage.info("under construction");
										}
									}catch(NumberFormatException e) {
											usermessage.info("Incorrect option... please choose an option between 1 and 2");
									}
								
									
									break;
								case 2:
									usermessage.info("Enter the amount you would like to deposit");
									int deposit = 0;
									try {
										deposit = Integer.parseInt(sc.nextLine());
										usermessage.info("Insert method to deposit money and make sure it not negative deposit");
									}catch(NumberFormatException e){
										usermessage.info("Invalid input, please try again");
									}
									
									break;
								case 3:
									usermessage.info("Enter the amount you would like to withdraw");
									int withdraw = 0;
									try {
										withdraw = Integer.parseInt(sc.nextLine());
										usermessage.info("Insert method to withdraw money and make sure it not negative deposit");
									}catch(NumberFormatException e){
										
									}
									break;
								case 4:
									usermessage.info("Enter the amount you would like to transfer");
									int transfer = 0;
									try {
										transfer = Integer.parseInt(sc.nextLine());
										usermessage.info("Insert method to transfer money and make sure it not negative deposit");
									}catch(NumberFormatException e){
									}
									usermessage.info("Enter the account number you want to transfer money into");
									int accountNumber = 0;
									try {
										accountNumber = Integer.parseInt(sc.nextLine());
										usermessage.info("Insert method to check if account exist and perform money transfer");
									}catch(NumberFormatException e){
									}
									break;
								case 5:
									usermessage.info("method to show any pending transfer awaiting for acceptance");
									break;
								case 6:
									usermessage.info("Returning to Main Menu");
									break;

								default:
									usermessage.info("Invalid option... Please enter an option between 1-6");
									break;
								}
							} catch (NumberFormatException e) {
								usermessage.info("Incorrect option... please choose an option between 1 and 6");
							}
						} while (loginchoice != 6);

					}
					if (username == null && password == null) {
						int loginchoice = 0;
						do {
							usermessage.info("*****************");
							usermessage.info("* Employee Menu *");
							usermessage.info("*****************");
							usermessage.info("1) Check account of your choice");
							usermessage.info("2) Create customer account");
							usermessage.info("3) Accept/Reject pending accounts");
							usermessage.info("4) View logs");
							usermessage.info("5) Exit");
						} while (loginchoice != 5);

					}
					break;
				case 2:
					usermessage.info("method to ask for information");
					break;
				case 3:
					usermessage.info("\nThank you for choosing Okane Banku to perform your banking needs");
					break;
				default:
					usermessage.info("Invalid selection... Please enter a choice between 1-3 only");
					break;
				}
			} catch (NumberFormatException e) {

			}
		} while (choice != 3);
	}
}
